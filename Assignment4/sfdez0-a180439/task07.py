# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1eSqyK7AyqCXjSOrKArwjHZ6unlBCVHTk

**Task 07: Querying RDF(s)**
"""

!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2023-2024/master/Assignment4/course_materials"

"""First let's read the RDF file"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "LivingThing" with RDFLib and SPARQL**"""

from rdflib.plugins.sparql import prepareQuery

q1 = prepareQuery('''
  SELECT ?Class WHERE {
    ?Class rdfs:subClassOf ns:LivingThing
  }
  ''',
  initNs = { "ns": Namespace("http://somewhere#") }
)

# Visualize the results
for r in g.query(q1):
  print(r.Class)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

q2 = prepareQuery('''
  SELECT DISTINCT ?Person WHERE {
    {
      ?Person rdf:type ns:Person
    }
    UNION
    {
      ?subclass rdfs:subClassOf ns:Person.
      ?Person rdf:type ?subclass
    }
  }
  ''',
  initNs = { "ns": Namespace("http://somewhere#") }
)

# Visualize the results
for r in g.query(q2):
  print(r.Person)

"""**TASK 7.3: List all individuals of "Person" or "Animal" and all their properties including their class with RDFLib and SPARQL. You do not need to list the individuals of the subclasses of person**

"""

q3 = prepareQuery('''
  SELECT ?Person ?Animal ?Property WHERE {
    {
      ?Person rdf:type ns:Person.
      ?Person ?Property ?Value
    }
    UNION
    {
      ?Animal rdf:type ns:Animal.
      ?Animal ?Property ?value
    }
  }
  ''',
  initNs = { "ns": Namespace("http://somewhere#") }
)

# Visualize the results
for r in g.query(q3):
  print(r.Person, r.Animal, r.Property)

"""**TASK 7.4:  List the name of the persons who know Rocky**"""

from rdflib import FOAF

q4 = prepareQuery('''
  SELECT ?Person WHERE {
    ?Person foaf:knows ns:RockySmith
  }
  ''',
  initNs = { "ns": Namespace("http://somewhere#"), "foaf": FOAF }
)

# Visualize the results
for r in g.query(q4):
  print(r.Person)

"""**Task 7.5: List the entities who know at least two other entities in the graph**"""

from rdflib import FOAF

q5 = prepareQuery('''
  SELECT DISTINCT ?Entity WHERE {
    ?Entity foaf:knows ?Entity2;
            foaf:knows ?Entity3
  }
  ''',
  initNs = { "foaf": FOAF }
)

# Visualize the results
for r in g.query(q5):
  print(r.Entity)